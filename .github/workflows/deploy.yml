name: Deployment
on: 
    push:
        branches: 
            - main
env:
    DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
    DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
    IMAGE_NAME: your-app-name

jobs:
    build: 
        runs-on: ubuntu-latest
        steps: 
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                 username: ${{ secrets.DOCKER_HUB_USERNAME }}
                 password: ${{ secrets.DOCKER_HUB_TOKEN }}
            - name: Build and push Frontend
              uses: docker/build-push-action@v5
              with:
                context: ./client
                file: ./client/Dockerfile
                push: true
                tags: |
                    ${{ secrets.DOCKER_HUB_USERNAME }}/socialecho-frontend:latest
                    ${{ secrets.DOCKER_HUB_USERNAME }}/socialecho-frontend:${{ github.sha }}
            - name: Build and push Backend
              uses: docker/build-push-action@v5
              with:
                context: ./server
                file: ./server/Dockerfile
                push: true
                tags: |
                    ${{ secrets.DOCKER_HUB_USERNAME }}/socialecho-backend:latest
                    ${{ secrets.DOCKER_HUB_USERNAME }}/socialecho-backend:${{ github.sha }}
            - name: Configure kubectl
              run: |
                mkdir -p ~/.kube
                echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > ~/.kube/config
                chmod 600 ~/.kube/config
                kubectl cluster-info
      
            - name: Update and deploy K8s manifests
              run: |
                 sed -i "s|DOCKERHUB_USERNAME|${{ secrets.DOCKER_HUB_USERNAME }}|g" k8s/*.yaml
                 sed -i "s|IMAGE_TAG|${{ github.sha }}|g" k8s/*.yaml
                 kubectl apply -f k8s/
                 kubectl rollout status deployment/socialecho-frontend --timeout=300s
                 kubectl rollout status deployment/socialecho-backend --timeout=300s
                 kubectl get pods -l app=socialecho-frontend
                 kubectl get pods -l app=socialecho-backend